"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
even_count = 0  # счетчик четных
odd_count = 0  # счетчик нечетных


def task2(num, even_count, odd_count):
    if len(num) == 0:
        return f'четных чисел: {even_count}, нечетных {odd_count}'
    else:
        try:
            if list(map(int, num))[0] % 2 == 0:  # делаем из введенного значения список чисел
                even_count += 1
                return task2(num[1:], even_count, odd_count)
            else:
                odd_count += 1
                return task2(num[1:], even_count, odd_count)
        except ValueError:
            print('неверный ввод, введите число')
            return task2(input('введите число'), even_count, odd_count)


print(task2(input('введите число'), even_count, odd_count))
